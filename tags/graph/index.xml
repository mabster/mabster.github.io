<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graph on Mabster.NET</title><link>https://mabster.net/tags/graph/</link><description>Recent content in Graph on Mabster.NET</description><generator>Hugo</generator><language>en-au</language><lastBuildDate>Wed, 18 Oct 2023 12:00:00 +1100</lastBuildDate><atom:link href="https://mabster.net/tags/graph/index.xml" rel="self" type="application/rss+xml"/><item><title>Get Planner Data with PowerShell Universal</title><link>https://mabster.net/posts/psu-planner/</link><pubDate>Wed, 18 Oct 2023 12:00:00 +1100</pubDate><guid>https://mabster.net/posts/psu-planner/</guid><description>&lt;p>Recently, the Graph team introduced the ability to access Planner as an application, rather than as a human. That means we were able to give PowerShell Universal the ability to read plans, tasks etc and surface them as an API endpoint.&lt;/p></description></item><item><title>Calling MS Graph from ASP.NET on Azure</title><link>https://mabster.net/posts/webapp-graph/</link><pubDate>Wed, 24 Aug 2022 09:00:00 +1000</pubDate><guid>https://mabster.net/posts/webapp-graph/</guid><description>&lt;p>In my &lt;a href="https://mabster.net/posts/psu-graph" >last post&lt;/a> I talked about calling Microsoft Graph endpoints using an Azure managed identity from PowerShell Universal. This post is about doing the same thing from an ASP.NET web application on .NET 6.&lt;/p></description></item><item><title>Calling MS Graph from PSU on Azure</title><link>https://mabster.net/posts/psu-graph/</link><pubDate>Mon, 22 Aug 2022 09:00:00 +1000</pubDate><guid>https://mabster.net/posts/psu-graph/</guid><description>&lt;p>The &lt;a href="https://www.powershellgallery.com/packages/Microsoft.Graph/" class="external-link" target="_blank" rel="noopener">Microsoft.Graph PowerShell module&lt;/a> wraps up all the Graph endpoints in PowerShell functions, but for security reasons, the &lt;code>Connect-MgGraph&lt;/code> function doesn&amp;rsquo;t allow for stored (secret) credentials. However, since we host &lt;a href="https://ironmansoftware.com/powershell-universal" class="external-link" target="_blank" rel="noopener">PowerShell Universal&lt;/a> as an Azure App Service, and we have a &lt;strong>managed identity&lt;/strong> for that app service, we can connect to Graph &lt;em>as the app&lt;/em>!&lt;/p></description></item></channel></rss>