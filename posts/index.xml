<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Mabster.NET</title><link>http://mabster.net/posts/</link><description>Recent content in Posts on Mabster.NET</description><generator>Hugo</generator><language>en-au</language><lastBuildDate>Sun, 30 Mar 2025 08:00:00 +1000</lastBuildDate><atom:link href="http://mabster.net/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Recent Posts for Hugo Coder</title><link>http://mabster.net/posts/recent-posts-hugo-coder/</link><pubDate>Sun, 30 Mar 2025 08:00:00 +1000</pubDate><guid>http://mabster.net/posts/recent-posts-hugo-coder/</guid><description>&lt;p>Here&amp;rsquo;s how I added a &amp;rsquo;latest posts&amp;rsquo; list on my home page!&lt;/p></description></item><item><title>Get Planner Data with PowerShell Universal</title><link>http://mabster.net/posts/psu-planner/</link><pubDate>Wed, 18 Oct 2023 12:00:00 +1100</pubDate><guid>http://mabster.net/posts/psu-planner/</guid><description>&lt;p>Recently, the Graph team introduced the ability to access Planner as an application, rather than as a human. That means we were able to give PowerShell Universal the ability to read plans, tasks etc and surface them as an API endpoint.&lt;/p></description></item><item><title>One-Time File Downloads in ASP.NET</title><link>http://mabster.net/posts/one-time-files-dotnet/</link><pubDate>Mon, 03 Jul 2023 12:00:00 +1100</pubDate><guid>http://mabster.net/posts/one-time-files-dotnet/</guid><description>&lt;p>A trick for downloading files from your secure ASP.NET Web API.&lt;/p></description></item><item><title>Start-ChinWag in PowerShell</title><link>http://mabster.net/posts/start-chinwag/</link><pubDate>Mon, 14 Nov 2022 14:53:34 +1100</pubDate><guid>http://mabster.net/posts/start-chinwag/</guid><description>&lt;p>Recently, my manager was experimenting with the idea of randomly touching base with people in the business through the day as a way to keep engaged when working remotely. Not content with a manual process, he was tinkering with a PowerShell script to get the members of an Active Directory group, choose someone at random, and start a Teams call using the &lt;code>callto:&lt;/code> protocol.&lt;/p></description></item><item><title>View on GitHub Link for Hugo Coder</title><link>http://mabster.net/posts/github-link-hugo-coder/</link><pubDate>Mon, 19 Sep 2022 17:00:00 +1000</pubDate><guid>http://mabster.net/posts/github-link-hugo-coder/</guid><description>&lt;p>I wanted a &amp;ldquo;View on GitHub&amp;rdquo; link on this blog so you could quickly view the source code for any post. Here&amp;rsquo;s how I did it!&lt;/p></description></item><item><title>Random Sample of AD Users in PowerShell</title><link>http://mabster.net/posts/random-users-powershell/</link><pubDate>Sun, 28 Aug 2022 09:00:00 +1000</pubDate><guid>http://mabster.net/posts/random-users-powershell/</guid><description>&lt;p>We had a situation at work recently where we needed to gradually roll out a change to our Active Directory user accounts, and we wanted to make sure we got a random sample from across the organisation for each &amp;ldquo;ring&amp;rdquo; of the deployment.&lt;/p></description></item><item><title>Entity Framework Migrations from GitHub Actions</title><link>http://mabster.net/posts/ef-migration-github-actions/</link><pubDate>Fri, 26 Aug 2022 09:00:00 +1000</pubDate><guid>http://mabster.net/posts/ef-migration-github-actions/</guid><description>&lt;p>So you have an app using Entity Framework that you&amp;rsquo;re deploying using GitHub Actions, and you want to use Migrations to keep your database up to date.&lt;/p></description></item><item><title>Calling MS Graph from ASP.NET on Azure</title><link>http://mabster.net/posts/webapp-graph/</link><pubDate>Wed, 24 Aug 2022 09:00:00 +1000</pubDate><guid>http://mabster.net/posts/webapp-graph/</guid><description>&lt;p>In my &lt;a href="http://mabster.net/posts/psu-graph" >last post&lt;/a> I talked about calling Microsoft Graph endpoints using an Azure managed identity from PowerShell Universal. This post is about doing the same thing from an ASP.NET web application on .NET 6.&lt;/p></description></item><item><title>Calling MS Graph from PSU on Azure</title><link>http://mabster.net/posts/psu-graph/</link><pubDate>Mon, 22 Aug 2022 09:00:00 +1000</pubDate><guid>http://mabster.net/posts/psu-graph/</guid><description>&lt;p>The &lt;a href="https://www.powershellgallery.com/packages/Microsoft.Graph/" class="external-link" target="_blank" rel="noopener">Microsoft.Graph PowerShell module&lt;/a> wraps up all the Graph endpoints in PowerShell functions, but for security reasons, the &lt;code>Connect-MgGraph&lt;/code> function doesn&amp;rsquo;t allow for stored (secret) credentials. However, since we host &lt;a href="https://ironmansoftware.com/powershell-universal" class="external-link" target="_blank" rel="noopener">PowerShell Universal&lt;/a> as an Azure App Service, and we have a &lt;strong>managed identity&lt;/strong> for that app service, we can connect to Graph &lt;em>as the app&lt;/em>!&lt;/p></description></item><item><title>PowerShell Universal Startup Script</title><link>http://mabster.net/posts/psu-startup/</link><pubDate>Sat, 20 Aug 2022 14:30:00 +1000</pubDate><guid>http://mabster.net/posts/psu-startup/</guid><description>&lt;p>I&amp;rsquo;ve been playing with &lt;a href="https://ironmansoftware.com/powershell-universal" class="external-link" target="_blank" rel="noopener">PowerShell Universal&lt;/a> for almost a year now, and I thought this would be a great place to share some tips, tricks and scripts that have helped me out. And what better place to start than the &lt;code>initialize.ps1&lt;/code> script? That&amp;rsquo;s the script that runs right before the PSU server starts.&lt;/p>
&lt;p>The script lives in the &lt;code>.universal&lt;/code> folder inside your Repository folder, so create it if it doesn&amp;rsquo;t exist already.&lt;/p></description></item><item><title>Welcome (back) to Mabster.NET</title><link>http://mabster.net/posts/welcome/</link><pubDate>Sat, 20 Aug 2022 14:00:00 +1000</pubDate><guid>http://mabster.net/posts/welcome/</guid><description>&lt;p>So yeah, I got tired of faffing about with blog engines and have decided to relaunch this site as a static blog.&lt;/p></description></item></channel></rss>